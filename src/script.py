import tkinter as tk
from tkinter import ttk, filedialog, messagebox, font
from tkinter.scrolledtext import ScrolledText


class ModernTextEditor:
    def __init__(self, root):
        self.root = root
        self.root.title("Modern Text Editor")
        self.root.geometry("1000x700")

        # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç–∏–ª—è
        self.setup_style()

        # –¢–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —à—Ä–∏—Ñ—Ç–∞
        self.current_font = "Segoe UI"
        self.current_size = 12

        # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        self.create_widgets()

        # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ —Ñ–∞–π–ª–∞
        self.current_file = None

    def setup_style(self):
        style = ttk.Style()
        style.theme_use('clam')

        # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ –¥–ª—è —Ç–µ–º–Ω–æ–π —Ç–µ–º—ã
        style.configure('.', background='#333333', foreground='white')
        style.configure('TFrame', background='#333333')
        style.configure('TLabel', background='#333333', foreground='white')
        style.configure('TButton', background='#444444', foreground='white',
                        borderwidth=1, focusthickness=3, focuscolor='none')
        style.map('TButton', background=[('active', '#555555')])
        style.configure('TMenubutton', background='#444444', foreground='white')
        style.configure('TCombobox', fieldbackground='#444444', foreground='white')

        # –°—Ç–∏–ª—å –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—è
        self.root.configure(bg='#333333')

    def create_widgets(self):
        # –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        main_frame = ttk.Frame(self.root)
        main_frame.pack(fill=tk.BOTH, expand=True)

        # –ü–∞–Ω–µ–ª—å –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
        toolbar = ttk.Frame(main_frame)
        toolbar.pack(side=tk.TOP, fill=tk.X, padx=5, pady=5)

        # –ö–Ω–æ–ø–∫–∏ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
        btn_frame = ttk.Frame(toolbar)
        btn_frame.pack(side=tk.LEFT)

        ttk.Button(btn_frame, text="üìÑ –ù–æ–≤—ã–π", command=self.new_file, width=8).pack(side=tk.LEFT, padx=2)
        ttk.Button(btn_frame, text="üìÇ –û—Ç–∫—Ä—ã—Ç—å", command=self.open_file, width=8).pack(side=tk.LEFT, padx=2)
        ttk.Button(btn_frame, text="üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", command=self.save_file, width=8).pack(side=tk.LEFT, padx=2)

        # –†–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å
        ttk.Separator(toolbar, orient=tk.VERTICAL).pack(side=tk.LEFT, padx=10, fill=tk.Y)

        # –í—ã–±–æ—Ä —à—Ä–∏—Ñ—Ç–∞
        font_frame = ttk.Frame(toolbar)
        font_frame.pack(side=tk.LEFT)

        ttk.Label(font_frame, text="–®—Ä–∏—Ñ—Ç:").pack(side=tk.LEFT)

        self.font_family = tk.StringVar(value=self.current_font)
        font_names = sorted(font.families())
        font_menu = ttk.Combobox(font_frame, textvariable=self.font_family,
                                 values=font_names, width=20)
        font_menu.pack(side=tk.LEFT, padx=5)
        font_menu.bind('<<ComboboxSelected>>', self.update_font)

        ttk.Label(font_frame, text="–†–∞–∑–º–µ—Ä:").pack(side=tk.LEFT)

        self.font_size = tk.IntVar(value=self.current_size)
        sizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 28, 32, 36]
        size_menu = ttk.Combobox(font_frame, textvariable=self.font_size,
                                 values=sizes, width=4)
        size_menu.pack(side=tk.LEFT, padx=5)
        size_menu.bind('<<ComboboxSelected>>', self.update_font)

        # –¢–µ–∫—Å—Ç–æ–≤–æ–µ –ø–æ–ª–µ —Å –ø—Ä–æ–∫—Ä—É—Ç–∫–æ–π
        text_frame = ttk.Frame(main_frame)
        text_frame.pack(fill=tk.BOTH, expand=True, padx=5, pady=(0, 5))

        self.text_area = ScrolledText(text_frame, wrap=tk.WORD, undo=True,
                                      font=(self.current_font, self.current_size),
                                      bg='#252525', fg='white', insertbackground='white',
                                      selectbackground='#555555', selectforeground='white',
                                      padx=10, pady=10)
        self.text_area.pack(fill=tk.BOTH, expand=True)

        # –°—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è
        self.status_bar = ttk.Label(main_frame, text="–ì–æ—Ç–æ–≤", relief=tk.SUNKEN)
        self.status_bar.pack(side=tk.BOTTOM, fill=tk.X)

        # –ü—Ä–∏–≤—è–∑–∫–∞ —Å–æ–±—ã—Ç–∏–π
        self.text_area.bind('<KeyRelease>', self.update_status)

    def update_font(self, event=None):
        self.current_font = self.font_family.get()
        self.current_size = self.font_size.get()
        self.text_area.configure(font=(self.current_font, self.current_size))

    def update_status(self, event=None):
        text = self.text_area.get("1.0", tk.END)
        lines = text.count('\n')
        words = len(text.split())
        chars = len(text) - 1  # –º–∏–Ω—É—Å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Å–∏–º–≤–æ–ª –ø–µ—Ä–µ–≤–æ–¥–∞ —Å—Ç—Ä–æ–∫–∏
        self.status_bar.config(text=f"–°—Ç—Ä–æ–∫: {lines} | –°–ª–æ–≤: {words} | –°–∏–º–≤–æ–ª–æ–≤: {chars}")

    def new_file(self):
        self.text_area.delete("1.0", tk.END)
        self.current_file = None
        self.status_bar.config(text="–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç")

    def open_file(self):
        file_path = filedialog.askopenfilename(
            filetypes=[("–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã", "*.txt"), ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")]
        )
        if file_path:
            try:
                with open(file_path, "r", encoding="utf-8") as file:
                    self.text_area.delete("1.0", tk.END)
                    self.text_area.insert("1.0", file.read())
                self.current_file = file_path
                self.status_bar.config(text=f"–û—Ç–∫—Ä—ã—Ç —Ñ–∞–π–ª: {file_path}")
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª: {e}")

    def save_file(self):
        if self.current_file:
            try:
                with open(self.current_file, "w", encoding="utf-8") as file:
                    file.write(self.text_area.get("1.0", tk.END))
                self.status_bar.config(text=f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {self.current_file}")
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")
        else:
            self.save_as_file()

    def save_as_file(self):
        file_path = filedialog.asksaveasfilename(
            defaultextension=".txt",
            filetypes=[("–¢–µ–∫—Å—Ç–æ–≤—ã–µ —Ñ–∞–π–ª—ã", "*.txt"), ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")]
        )
        if file_path:
            try:
                with open(file_path, "w", encoding="utf-8") as file:
                    file.write(self.text_area.get("1.0", tk.END))
                self.current_file = file_path
                self.status_bar.config(text=f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫: {file_path}")
            except Exception as e:
                messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∞–π–ª: {e}")

    def run(self):
        self.root.mainloop()


if __name__ == "__main__":
    root = tk.Tk()
    app = ModernTextEditor(root)
    app.run()